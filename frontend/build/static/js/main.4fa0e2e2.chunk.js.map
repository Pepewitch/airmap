{"version":3,"sources":["assets/pttlogo.png","hooks/useAction.js","features/pollution-image/redux.js","features/pollution-image/NavBar.jsx","features/pollution-image/SideBar.jsx","features/pollution-image/ImagesCarousel.jsx","features/pollution-image/ImageItem.jsx","features/pollution-image/ImageList.jsx","features/screen-size/useScreenSize.js","features/pollution-image/Image3DList.jsx","features/pollution-image/PollutionImage.jsx","features/screen-size/redux.js","redux.js","features/not-found/NotFound.jsx","App.jsx","features/screen-size/useScreenSizeSubscription.js","serviceWorker.js","index.js"],"names":["module","exports","useAction","action","dispatch","useDispatch","useCallback","initialState","sidebar","dimension","cropPosition","x","y","cropScale","items","startDate","moment","endDate","level","ACTION","toggleSidebarAction","type","itemChangeAction","item","index","payload","itemRemoveAction","cropPositionChangeAction","cropScaleChangeAction","Container","styled","div","Spacer","NavBar","toggleSidebar","shape","icon","size","onClick","Text","Typography","Option","Select","props","open","Inner","CloseButtonContainer","LogoContainer","LogoImage","img","ActionContainer","ControllerContainer","DatePickerContainer","ZoomActionContainer","OptionalText","Logo","src","ptt","CloseButton","levels","Array","fill","map","_","key","value","Controller","onChange","strong","format","style","width","placeholder","Action","useSelector","state","pollution","ZoomAction","scale","onScaleChange","min","max","nextScale","SideBar","ImageContainer","StyledCarousel","Carousel","transitionDelay","DirectionContainer","direction","AutoplaySwitchContainer","Direction","AutoplaySwitch","checkedChildren","unCheckedChildren","ImagesCarousel","images","carouselRef","useRef","onLeftClick","current","prev","onRightClick","next","useState","autoplay","setAutoPlay","intervalRef","useEffect","setInterval","window","clearInterval","position","onPositionChange","responsiveWidth","effect","swipe","ref","image","height","border","checked","e","Title","ItemContainer","ImageItem","display","Math","floor","ImageList","get","Image3DList","TabPane","Tabs","Row","StyledTabs","PollutionImage","defaultActiveKey","tab","innerWidth","screenSizeSubscribeAction","rootReducer","combineReducers","splice","screenSize","NotFound","to","store","createStore","history","createBrowserHistory","Subscription","children","setWidth","event","addEventListener","removeEventListener","useScreenSizeSubscription","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4fa0e2e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pttlogo.92b0ab0d.png\";","import { useDispatch } from \"react-redux\";\nimport { useCallback } from \"react\";\n\nexport function useAction(action) {\n  const dispatch = useDispatch();\n  return useCallback((...e) => dispatch(action(...e)), [action, dispatch]);\n}\n","import moment from \"moment\";\n\nconst initialState = {\n  sidebar: false,\n  dimension: \"2D\",\n  cropPosition: {\n    x: 0.5,\n    y: 0.5\n  },\n  cropScale: 1,\n  items: [\n    {\n      startDate: moment(),\n      endDate: null,\n      level: 0\n    }\n  ]\n};\n\nconst ACTION = {\n  POLLUTION_IMAGE_TOGGLE_SIDEBAR: \"POLLUTION_IMAGE_TOGGLE_SIDEBAR\",\n  POLLUTION_IMAGE_ITEM_CHANGE: \"POLLUTION_IMAGE_ITEM_CHANGE\",\n  POLLUTION_IMAGE_ITEM_REMOVE: \"POLLUTION_IMAGE_ITEM_REMOVE\",\n  POLLUTION_IMAGE_ITEM_ADD: \"POLLUTION_IMAGE_ITEM_ADD\",\n  POLLUTION_IMAGE_CROP_POSITION_CHANGE: \"POLLUTION_IMAGE_CROP_POSITION_CHANGE\",\n  POLLUTION_IMAGE_CROP_SCALE_CHANGE: \"POLLUTION_IMAGE_CROP_SCALE_CHANGE\",\n  POLLUTION_IMAGE_DIMENSION_CHANGE: \"POLLUTION_IMAGE_DIMENSION_CHANGE\"\n};\n\nexport const toggleSidebarAction = () => {\n  return {\n    type: ACTION.POLLUTION_IMAGE_TOGGLE_SIDEBAR\n  };\n};\n\nexport const itemChangeAction = (item, index) => {\n  return {\n    type: ACTION.POLLUTION_IMAGE_ITEM_CHANGE,\n    payload: {\n      index,\n      item\n    }\n  };\n};\n\nexport const itemRemoveAction = (item, index) => {\n  return {\n    type: ACTION.POLLUTION_IMAGE_ITEM_REMOVE,\n    payload: {\n      index,\n      item\n    }\n  };\n};\n\nexport const itemAddAction = () => {\n  return {\n    type: ACTION.POLLUTION_IMAGE_ITEM_ADD,\n    payload: {\n      date: null,\n      level: 0\n    }\n  };\n};\n\nexport const cropPositionChangeAction = cropPosition => {\n  return {\n    type: ACTION.POLLUTION_IMAGE_CROP_POSITION_CHANGE,\n    payload: {\n      cropPosition\n    }\n  };\n};\n\nexport const cropScaleChangeAction = cropScale => {\n  return {\n    type: ACTION.POLLUTION_IMAGE_CROP_SCALE_CHANGE,\n    payload: {\n      cropScale\n    }\n  };\n};\n\nexport const dimensionChangeAction = dimension => {\n  return {\n    type: ACTION.POLLUTION_IMAGE_DIMENSION_CHANGE,\n    payload: { dimension }\n  };\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION.POLLUTION_IMAGE_TOGGLE_SIDEBAR:\n      return { ...state, sidebar: !state.sidebar };\n    case ACTION.POLLUTION_IMAGE_ITEM_CHANGE: {\n      state.items.splice(action.payload.index, 1, action.payload.item);\n      return { ...state, items: [...state.items] };\n    }\n    case ACTION.POLLUTION_IMAGE_ITEM_REMOVE: {\n      state.items.splice(action.payload.index, 1);\n      return { ...state, items: [...state.items] };\n    }\n    case ACTION.POLLUTION_IMAGE_ITEM_ADD:\n      return { ...state, items: [...state.items, action.payload] };\n    case ACTION.POLLUTION_IMAGE_CROP_POSITION_CHANGE:\n      return { ...state, cropPosition: action.payload.cropPosition };\n    case ACTION.POLLUTION_IMAGE_CROP_SCALE_CHANGE:\n      return { ...state, cropScale: action.payload.cropScale };\n    case ACTION.POLLUTION_IMAGE_DIMENSION_CHANGE:\n      return { ...state, dimension: action.payload.dimension };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"antd\";\nimport { useAction } from \"hooks/useAction\";\nimport { toggleSidebarAction } from \"./redux\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 56px;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: 0 16px;\n  z-index: 1000;\n`;\n\nconst Spacer = styled.div`\n  width: 100%;\n  height: 56px;\n  background-color: white;\n  @media (min-width: 801px) {\n    display: none;\n  }\n`;\n\nexport const NavBar = () => {\n  const toggleSidebar = useAction(toggleSidebarAction);\n  return (\n    <Spacer>\n      <Container>\n        <Button\n          type=\"link\"\n          shape=\"circle\"\n          icon=\"menu\"\n          size=\"large\"\n          onClick={toggleSidebar}\n        />\n      </Container>\n    </Spacer>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { useAction } from \"hooks/useAction\";\nimport {\n  toggleSidebarAction,\n  itemChangeAction,\n  itemRemoveAction,\n  itemAddAction,\n  cropScaleChangeAction\n} from \"./redux\";\nimport { Button, Divider, DatePicker, Select, Typography, Slider } from \"antd\";\nimport ptt from \"assets/pttlogo.png\";\n\nconst { Text } = Typography;\nconst { Option } = Select;\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 300px;\n  z-index: 1100;\n  background-color: white;\n  transition: all 0.4s ease-in-out;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\n  overflow-y: auto;\n  @media (max-width: 800px) {\n    transform: translate3d(${props => (props.open ? 0 : -400)}px, 0, 0);\n  }\n`;\n\nconst Inner = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  width: 100%;\n  padding: 16px 0;\n`;\n\nconst Spacer = styled.div`\n  width: 300px;\n  flex-shrink: 0;\n  height: 100vh;\n  @media (max-width: 800px) {\n    width: 0px;\n  }\n`;\n\nconst CloseButtonContainer = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  @media (min-width: 801px) {\n    display: none;\n  }\n`;\n\nconst LogoContainer = styled.div`\n  width: 60%;\n  padding: 0 16px;\n`;\nconst LogoImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n  padding: 0 16px;\n`;\nconst ControllerContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 16px;\n  border-radius: 8px;\n  border: 1px solid #eee;\n  margin-bottom: 16px;\n  .remove-button {\n    opacity: 0;\n    transition: 0.1s;\n    transition-delay: 0.2s;\n  }\n  &:hover {\n    .remove-button {\n      opacity: 1;\n\n      transition: 0s;\n      transition-delay: 0s;\n    }\n  }\n`;\nconst RemoveButtonContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  transform: translate3d(50%, -50%, 0);\n`;\n\nconst DatePickerContainer = styled.div`\n  margin-bottom: 8px;\n  width: 100%;\n  .ant-calendar-picker {\n    width: 100%;\n  }\n`;\n\nconst ZoomActionContainer = styled.div`\n  width: 100%;\n  padding: 0 16px;\n`;\n\nconst OptionalText = styled(Text)`\n  color: #888 !important;\n  font-size: 0.6em;\n`;\n\nconst RemoveButton = props => {\n  return (\n    <RemoveButtonContainer>\n      <Button\n        type=\"danger\"\n        shape=\"circle\"\n        icon=\"close\"\n        size=\"small\"\n        {...props}\n      />\n    </RemoveButtonContainer>\n  );\n};\n\nconst Logo = () => {\n  return (\n    <LogoContainer>\n      <LogoImage src={ptt} />\n    </LogoContainer>\n  );\n};\n\nconst CloseButton = () => {\n  const toggleSidebar = useAction(toggleSidebarAction);\n  return (\n    <CloseButtonContainer>\n      <Button\n        type=\"link\"\n        shape=\"circle\"\n        icon=\"close\"\n        size=\"large\"\n        onClick={toggleSidebar}\n      />\n    </CloseButtonContainer>\n  );\n};\n\nconst levels = new Array(41).fill(0).map((_, index) => (\n  <Option key={index} value={index}>\n    {index}\n  </Option>\n));\n\nconst Controller = ({ item, index }) => {\n  const onChange = useAction(itemChangeAction);\n  const onRemove = useAction(itemRemoveAction);\n  const onStartDatePickerChange = startDate => {\n    onChange({ ...item, startDate }, index);\n  };\n  const onEndDatePickerChange = endDate => {\n    onChange({ ...item, endDate }, index);\n  };\n  const onRemoveButtonClick = () => {\n    onRemove(item, index);\n  };\n  const onLevelChange = level => {\n    onChange({ ...item, level }, index);\n  };\n  return (\n    <ControllerContainer>\n      {/* <RemoveButton className=\"remove-button\" onClick={onRemoveButtonClick} /> */}\n      <DatePickerContainer>\n        <Text strong>\n          Select Start Date <OptionalText>(Optional)</OptionalText>\n        </Text>\n        <DatePicker\n          onChange={onStartDatePickerChange}\n          value={item.startDate}\n          format=\"DD MMMM YYYY\"\n        />\n      </DatePickerContainer>\n      <DatePickerContainer>\n        <Text strong>\n          Select End Date <OptionalText>(Optional)</OptionalText>\n        </Text>\n        <DatePicker\n          onChange={onEndDatePickerChange}\n          value={item.endDate}\n          format=\"DD MMMM YYYY\"\n        />\n      </DatePickerContainer>\n      <Text strong>Select Level</Text>\n      <Select\n        style={{ width: \"100%\" }}\n        placeholder=\"Level\"\n        value={item.level}\n        onChange={onLevelChange}\n      >\n        {levels}\n      </Select>\n    </ControllerContainer>\n  );\n};\n\nconst AddItem = () => {\n  const onClick = useAction(itemAddAction);\n  return (\n    <Button type=\"primary\" shape=\"round\" icon=\"plus\" onClick={onClick}>\n      Add\n    </Button>\n  );\n};\n\nconst Action = () => {\n  const items = useSelector(state => state.pollution.items);\n  return (\n    <ActionContainer>\n      {items.map((item, index) => (\n        <Controller item={item} index={index} key={index} />\n      ))}\n      {/* <AddItem /> */}\n    </ActionContainer>\n  );\n};\n\nconst ZoomAction = () => {\n  const scale = useSelector(state => state.pollution.cropScale);\n  const onScaleChange = useAction(cropScaleChangeAction);\n  return (\n    <ZoomActionContainer>\n      <Text strong>Zoom</Text>\n      <Slider\n        value={scale * 100}\n        min={100}\n        max={500}\n        onChange={nextScale => onScaleChange(nextScale / 100)}\n      />\n    </ZoomActionContainer>\n  );\n};\n\nexport const SideBar = () => {\n  const sidebar = useSelector(state => state.pollution.sidebar);\n  return (\n    <Spacer>\n      <Container open={sidebar}>\n        <Inner>\n          <CloseButton />\n          <Logo />\n          <Divider />\n          <ZoomAction />\n          <Divider />\n          <Action />\n        </Inner>\n      </Container>\n    </Spacer>\n  );\n};\n","import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport { Button, Carousel, Switch } from \"antd\";\nimport styled from \"styled-components\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport { cropPositionChangeAction } from \"./redux\";\nimport { useAction } from \"hooks/useAction\";\nimport { useSelector } from \"react-redux\";\n\nconst ImageContainer = styled.div`\n  padding-bottom: 17px;\n  background: #1890ff;\n  position: relative;\n`;\n\nconst StyledCarousel = styled(Carousel)`\n  .slick-slide:not(.slick-active) {\n    transition-delay: ${props => props.transitionDelay}ms !important;\n  }\n`;\nconst DirectionContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  ${props => (props.direction === \"left\" ? \"left: 16px;\" : \"right: 16px;\")}\n`;\nconst AutoplaySwitchContainer = styled.div`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n`;\n\nconst Direction = ({ direction, ...props }) => {\n  return (\n    <DirectionContainer direction={direction}>\n      <Button shape=\"circle\" icon={direction} type=\"default\" {...props} />\n    </DirectionContainer>\n  );\n};\n\nconst AutoplaySwitch = props => {\n  return (\n    <AutoplaySwitchContainer>\n      <Switch checkedChildren=\"Play\" unCheckedChildren=\"Pause\" {...props} />\n    </AutoplaySwitchContainer>\n  );\n};\n\nconst transitionDelay = 600;\n\nexport const ImagesCarousel = ({ images, width }) => {\n  const carouselRef = useRef(null);\n  const onLeftClick = () => carouselRef.current && carouselRef.current.prev();\n  const onRightClick = useCallback(\n    () => carouselRef.current && carouselRef.current.next(),\n    [carouselRef]\n  );\n  const [autoplay, setAutoPlay] = useState(false);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    if (autoplay && !intervalRef.current) {\n      intervalRef.current = setInterval(() => {\n        onRightClick();\n      }, transitionDelay);\n    } else if (!autoplay && intervalRef.current) {\n      window.clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    return () => {\n      if (intervalRef.current) window.clearInterval(intervalRef.current);\n    };\n  }, [autoplay, onRightClick]);\n  const position = useSelector(state => state.pollution.cropPosition);\n  const scale = useSelector(state => state.pollution.cropScale);\n  const onPositionChange = useAction(cropPositionChangeAction);\n  const responsiveWidth = (width > 600 ? 600 : width) - 32;\n  return (\n    <StyledCarousel\n      effect=\"fade\"\n      swipe={false}\n      ref={carouselRef}\n      transitionDelay={transitionDelay}\n    >\n      {images.map(image => (\n        <ImageContainer key={image}>\n          <AvatarEditor\n            image={image}\n            width={responsiveWidth}\n            height={responsiveWidth}\n            border={0}\n            scale={scale}\n            position={position}\n            onPositionChange={onPositionChange}\n          />\n          <AutoplaySwitch checked={autoplay} onChange={e => setAutoPlay(e)} />\n          <Direction direction=\"left\" onClick={onLeftClick} />\n          <Direction direction=\"right\" onClick={onRightClick} />\n        </ImageContainer>\n      ))}\n    </StyledCarousel>\n  );\n};\n","import React from \"react\";\nimport { Typography, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { ImagesCarousel } from \"./ImagesCarousel\";\n\nconst { Title } = Typography;\n\nconst ItemContainer = styled.div`\n  width: 100%;\n`;\n\nexport const ImageItem = ({ item, width }) => {\n  if (!item.startDate || (!item.level && typeof item.level !== \"number\")) {\n    return <span>Configuration is invalid.</span>;\n  }\n  return (\n    <ItemContainer>\n      <div style={{ display: \"flex\" }}>\n        <Title level={3}>{item.startDate.format(\"dddd, Do MMMM YYYY\")}</Title>\n      </div>\n      <ImagesCarousel\n        images={[\n          `/airdata/${\n            item.level < 100\n              ? `0${Math.floor(item.level / 10)}`\n              : Math.floor(item.level / 10)\n          }_01H1GALL.png`\n        ]}\n        width={width}\n      />\n    </ItemContainer>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { useScreenSize } from \"features/screen-size/useScreenSize\";\nimport { ImageItem } from \"./ImageItem\";\nimport { Divider } from \"antd\";\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  max-width: 600px;\n  padding: 16px;\n`;\n\nexport const ImageList = () => {\n  const items = useSelector(state => state.pollution.items);\n  const width = useScreenSize();\n  return (\n    <Container>\n      {items.map((item, index) => (\n        <div key={index}>\n          <ImageItem item={item} width={width} />\n          <Divider />\n        </div>\n      ))}\n    </Container>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport _ from \"lodash\";\n\nexport const useScreenSize = () => {\n  const width = useSelector(state => _.get(state, \"screenSize.width\"));\n  return width;\n};\n","import React from \"react\";\n\nexport const Image3DList = () => {\n  return <span>3D</span>;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavBar } from \"./NavBar\";\nimport { SideBar } from \"./SideBar\";\nimport { ImageList } from \"./ImageList\";\nimport { Tabs } from \"antd\";\nimport { Image3DList } from \"./Image3DList\";\n\nconst { TabPane } = Tabs;\n\nconst Row = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n`;\n\nconst StyledTabs = styled(Tabs)`\n  width: 100%;\n`;\n\nexport const PollutionImage = () => {\n  return (\n    <div>\n      <NavBar />\n      <Row>\n        <SideBar />\n        <StyledTabs defaultActiveKey=\"2D\">\n          <TabPane tab=\"2D\" key=\"2D\">\n            <ImageList />\n          </TabPane>\n          <TabPane tab=\"3D\" key=\"3D\">\n            <Image3DList />\n          </TabPane>\n        </StyledTabs>\n      </Row>\n    </div>\n  );\n};\n","const initialState = {\n  width: window.innerWidth\n};\n\nexport const ACTION = {\n  SCREEN_SIZE_SUBSCRIBE: \"SCREEN_SIZE_SUBSCRIBE\"\n};\n\nexport const screenSizeSubscribeAction = width => {\n  return {\n    type: ACTION.SCREEN_SIZE_SUBSCRIBE,\n    payload: width\n  };\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION.SCREEN_SIZE_SUBSCRIBE:\n      return { ...state, width: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { reducer as pollution } from \"./features/pollution-image/redux.js\";\nimport { reducer as screenSize } from \"./features/screen-size/redux\";\n\nexport const rootReducer = combineReducers({ pollution, screenSize });\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 24px;\n`;\n\nexport const NotFound = () => {\n  return (\n    <Container>\n      Not Found Page, <Link to=\"/\">Go back to main page.</Link>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Router, Redirect } from \"react-router-dom\";\nimport { PollutionImage } from \"./features/pollution-image/PollutionImage\";\nimport \"normalize.css\";\nimport \"antd/dist/antd.css\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"./redux\";\nimport { Provider } from \"react-redux\";\nimport { createBrowserHistory } from \"history\";\nimport { NotFound } from \"./features/not-found/NotFound\";\nimport \"index.css\";\nimport { useScreenSizeSubscription } from \"features/screen-size/useScreenSizeSubscription\";\n\nconst store = createStore(rootReducer);\nconst history = createBrowserHistory();\n\nconst Subscription = ({ children }) => {\n  useScreenSizeSubscription();\n  return children;\n};\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Subscription>\n        <Router history={history}>\n          <Switch>\n            <Route path=\"/\" exact component={PollutionImage} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </Router>\n      </Subscription>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { useAction } from \"hooks/useAction\";\nimport { useEffect } from \"react\";\nimport { screenSizeSubscribeAction } from \"./redux\";\n\nexport const useScreenSizeSubscription = () => {\n  const setWidth = useAction(screenSizeSubscribeAction);\n  useEffect(() => {\n    const event = window.addEventListener(\"resize\", () => {\n      setWidth(window.innerWidth);\n    });\n    return () => window.removeEventListener(event);\n  }, []);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}